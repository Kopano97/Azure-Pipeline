parameters:
  - name: repoUrl
    type: string
    default: 'https://github.com/QoT-Solutions/safeSpeed_BackEnd.git'

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: SetupJava
    displayName: 'Set Up Java 17'
    jobs:
      - job: SetJava17
        steps:
          - script: |
              echo "Installing JDK 17"
              sudo apt-get update
              sudo apt-get install openjdk-17-jdk -y
              echo "Setting JAVA_HOME environment variable"
              echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" | sudo tee -a /etc/environment
              echo "Adding JAVA_HOME to PATH"
              echo "PATH=$JAVA_HOME/bin:$PATH" | sudo tee -a /etc/environment
              source /etc/environment
              echo "Java version:"
              java -version
            displayName: 'Install and Set Up JDK 17'

  - stage: CloneAndBuild
    displayName: 'Clone Repository and Build Spring Boot Application'
    dependsOn: SetupJava
    jobs:
      - job: CloneAndBuildJob
        steps:
          - script: |
              echo "Cloning repository from ${{ parameters.repoUrl }}"
              git clone ${{ parameters.repoUrl }} repo
              cd repo
              echo "Setting execute permission for Maven Wrapper"
              chmod +x mvnw
              echo "Building Spring Boot application"
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
              ./mvnw clean package
            displayName: 'Clone repository and build Spring Boot application'

  - stage: DockerBuildAndPush
    displayName: 'Build and Push Docker Image'
    dependsOn: CloneAndBuild
    jobs:
      - job: DockerJob
        steps:
          - script: |
              echo "Logging in to Docker Hub"
              echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
            displayName: 'Docker Login'
          
          - script: |
              echo "Building Docker image"
              cd repo
              docker build -t kopanomgn/azuretest:latest .
            displayName: 'Build Docker Image'

          - script: |
              echo "Pushing Docker image to Docker Hub"
              docker push kopanomgn/azuretest:latest
            displayName: 'Push Docker Image to Docker Hub'

          - script: |
              echo "Docker image pushed successfully."
            displayName: 'Echo Success'

  - stage: DockerRun
    displayName: 'Run Docker Container'
    dependsOn: DockerBuildAndPush
    jobs:
      - job: DockerJob
        steps:
          - script: |
              echo "Running Docker Container"
              docker run -d -p 3000:3000 kopanomgn/azuretest
            displayName: 'Running Docker Container'
