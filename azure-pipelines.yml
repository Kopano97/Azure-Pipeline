parameters:
  - name: repoUrl
    type: string
    default: ''

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CloneAndBuild
    displayName: 'Clone Repository and Build Spring Boot Application'
    jobs:
      - job: CloneAndBuildJob
        steps:
          - script: echo "Cloning repository from ${{ parameters.repoUrl }}"
            displayName: 'Display Repo URL'

          - script: |
              git clone ${{ parameters.repoUrl }} repo
              cd repo
              echo "Building Spring Boot application"
              ./mvnw clean package # Use Maven Wrapper to build the Spring Boot application
            displayName: 'Clone repository and build Spring Boot application'

  - stage: DockerBuildAndPush
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: DockerJob
        steps:
          - script: |
              echo "Logging in to Docker Hub"
              docker login --username kopanomgn --password KopanoMagano@97
            displayName: 'Docker Login'
          
          - script: |
              echo "Building Docker image"
              git clone ${{ parameters.repoUrl }} repo2
              cd repo2
              docker build -t kopanomgn/azuretest:latest .
            displayName: 'Build Docker Image'

          - script: |
              echo "Pushing Docker image to Docker Hub"
              docker push kopanomgn/azuretest:latest
            displayName: 'Push Docker Image to Docker Hub'

          - script: |
              echo "Docker image pushed successfully."
            displayName: 'Echo Success'

  - stage: DockerRun
    displayName: 'Install Docker and Run Container'
    jobs:
      - job: DockerJob
        steps:
          - script: |
              echo "Running Docker Container"
              docker login --username kopanomgn --password KopanoMagano@97
              docker run -d -p 3000:3000 kopanomgn/azuretest
            displayName: 'Running Docker Container'
